<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">
    <!-- ChangeSet for creating the Levels table -->
    <changeSet id="2023-05-levels-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS levels (
                                                  id SERIAL PRIMARY KEY,
                                                  experience VARCHAR(255) NOT NULL
                );
        </sql>
    </changeSet>

    <changeSet id="user-role-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS roles (
                                                 id SERIAL PRIMARY KEY,
                                                 role_user VARCHAR(50) NOT NULL
                )
        </sql>
    </changeSet>

    <!-- ChangeSet for creating the Users table -->
    <changeSet id="2023-01-user-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS users (
                                                 id SERIAL PRIMARY KEY,
                                                 username VARCHAR(225),
                email VARCHAR(225) UNIQUE,
                passwordHash VARCHAR(225),
                registrationDate TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NOW(),
                levelId INTEGER,
                code VARCHAR(225),
                codeSentAt TIMESTAMP(0) WITHOUT TIME ZONE,
                verify BOOLEAN,
                roleId INTEGER,
                FOREIGN KEY (roleId) REFERENCES roles(id),
                FOREIGN KEY (levelId) REFERENCES levels(id)
                );
        </sql>
    </changeSet>


    <changeSet id="refresh-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS refresh (
                                                   id SERIAL PRIMARY KEY,
                                                   userId INTEGER,
                                                   token TEXT,
                                                   expiryDate TEXT,
                                                   FOREIGN KEY (userId) REFERENCES users(id)
                )
        </sql>
    </changeSet>

    <!-- ChangeSet for creating the Profiles table -->

    <!-- ChangeSet for creating the Professions table -->
    <changeSet id="2023-04-professions-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS professions (
                                                       id SERIAL PRIMARY KEY,
                                                       profession VARCHAR(255) NOT NULL
                );
        </sql>
    </changeSet>

    <changeSet id="2023-04-insert-professions" author="dayana">
        <sql>
            INSERT INTO professions (profession) VALUES
                                                     ('Менеджер продукта'),
                                                     ('Менеджер проекта'),
                                                     ('Бизнес-аналитик');
        </sql>
    </changeSet>




    <changeSet id="2023-04-insert-levels" author="dayana">
        <sql>
            INSERT INTO levels (experience) VALUES
                                                ('Стажировка'),
                                                ('Jun/Jun+'),
                                                ('Middle/Middle+'),
                                                ('Senior');
        </sql>
    </changeSet>


    <!-- ChangeSet for creating the Companies table -->
    <changeSet id="2023-06-companies-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS companies (
                                                     id SERIAL PRIMARY KEY,
                                                     company VARCHAR(255) NOT NULL
                );
        </sql>
    </changeSet>

    <changeSet id="2023-04-insert-companies" author="dayana">
        <sql>
            INSERT INTO companies (company) VALUES
                                                ('Тинькофф'),
                                                ('Яндекс'),
                                                ('Другое')
        </sql>
    </changeSet>

    <!-- ChangeSet for creating the UserCompanies table -->
    <changeSet id="2023-07-usercompanies-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS user_companies (
                                                          userId INTEGER NOT NULL,
                                                          companyId INTEGER NOT NULL,
                                                          FOREIGN KEY (userId) REFERENCES users(id),
                FOREIGN KEY (companyId) REFERENCES companies(id)
                );
        </sql>
    </changeSet>

    <changeSet id="2023-07-userprofessions-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS user_professions (
                                                            userId INTEGER NOT NULL,
                                                            professionId INTEGER NOT NULL,
                                                            FOREIGN KEY (userId) REFERENCES users(id),
                FOREIGN KEY (professionId) REFERENCES professions(id)
                );
        </sql>
    </changeSet>

    <!-- ChangeSet for creating the Articles table -->
    <changeSet id="2023-08-articles-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS articles (
                                                    id SERIAL PRIMARY KEY,
                                                    professionId INTEGER NOT NULL,

                                                    title VARCHAR(255) NOT NULL,
                author VARCHAR(255),
                content TEXT NOT NULL,
                link VARCHAR(255),
                FOREIGN KEY (professionId) REFERENCES professions(id)
                );
        </sql>
    </changeSet>

    <changeSet id="2023-08-insert-articles" author="dayana">
        <sql>
            INSERT INTO articles (professionId, title, author, content, link) VALUES
                                                                                  (1, 'Статья 1', 'Автор 1', 'Содержание статьи 1', 'https://example.com/article1'),
                                                                                  (2, 'Статья 2', 'Автор 2', 'Содержание статьи 2', 'https://example.com/article2'),
                                                                                  (3, 'Статья 3', 'Автор 3', 'Содержание статьи 3', 'https://example.com/article3');
        </sql>
    </changeSet>


    <!-- ChangeSet for creating the Advices table -->
    <changeSet id="2023-09-advices-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS advices (
                                                   id SERIAL PRIMARY KEY,
                                                   companyId INTEGER NOT NULL,
                                                   professionId INTEGER NOT NULL,
                                                   employeeName VARCHAR(255) NOT NULL,
                employeeLevel VARCHAR(255),
                text TEXT NOT NULL,
                FOREIGN KEY (professionId) REFERENCES professions(id),
                FOREIGN KEY (companyId) REFERENCES companies(id)
                );
        </sql>
    </changeSet>

    <changeSet id="2024-06-insert-advises" author="dayana">
        <sql>
            INSERT INTO advices (professionId, companyId, employeeName, employeeLevel, text) VALUES
                                                                                                 (1, 2, 'Алексей', 'Менеджер продукта', 'Продемонстрируйте свои аналитические навыки: подготовьте примеры из вашего опыта, когда вы анализировали данные для принятия продуктовых решений или улучшения функциональности продукта'),
                                                                                                 (1, 2, 'Алексей', 'Менеджер продукта', 'Расскажите о своём опыте работы с пользователем, поделитесь историями о том, как вы взаимодействовали с пользователями для получения обратной связи и как это повлияло на развитие продукта'),
                                                                                                 (1, 2, 'Алексей', 'Менеджер продукта', 'Задавая вопросы о культуре компании, ожиданиях от данной роли и направлениях развития продукта, вы покажете свой интерес и готовность быть вовлеченным в работу компании'),
                                                                                                 (1, 2, 'Алексей', 'Менеджер продукта', 'Рекомендации от предыдущих работодателей или коллег могут сыграть важную роль, подчеркнув вашу компетентность и способность работать в команде'),
                                                                                                 (2, 2, 'Анастасия', 'Менеджер проекта', 'Будьте готовы обсудить, как вы разрабатывали или могли бы разработать стратегии для роста или улучшения продукта'),
                                                                                                 (3, 1, 'Сергей', 'Бизнес-аналитик', 'Сначала данные, потом интуиция: всегда ищите и анализируйте данные перед тем, как принимать какие-либо предположения или решения'),
                                                                                                 (3, 1, 'Сергей', 'Бизнес-аналитик', 'Мастерите Excel и SQL – эти инструменты являются вашими лучшими друзьями в анализе данных и помогут вам быстро находить ответы на сложные вопросы'),
                                                                                                 (3, 1, 'Сергей', 'Бизнес-аналитик', 'Не бойтесь задавать вопросы, вопросы помогают уточнить и углубить ваше понимание задач и дадут возможность улучшить аналитические процедуры'),
                                                                                                 (3, 1, 'Сергей', 'Бизнес-аналитик', 'Отмечайте свои маленькие победы, цените каждые улучшения и успехи в работе, это помогает поддерживать мотивацию и стремление к развитию'),
                                                                                                 (3, 1, 'Сергей', 'Бизнес-аналитик', 'Изучите визуализацию данных: научитесь эффективно представлять данные с помощью инструментов визуализации, таких как Tableau или PowerBI, чтобы ваши выводы были понятны для всех'),
                                                                                                 (1, 2, 'Татьяна', 'Менеджер продукта', 'Во время собеседования мне не так важно, какой ответ вы дадите на математическую или логическую задачу, я смотрю на ваши размышления, поэтому не стесняйтесь думать вслух'),
                                                                                                 (1, 2, 'Артём', 'Менеджер продукта', 'Учитесь говорить о своих результатах в формате “Была такая проблема, я сделал это потому что..., это повлияло на целевую метрику вот так”'),
                                                                                                 (2, 2, 'Диана', 'Менеджер проекта', 'Важно полностью понимать, что является конечной целью проекта. Это поможет правильно расставить приоритеты и обеспечить, что вся команда работает над достижением общей цели'),
                                                                                                 (2, 2, 'Диана', 'Менеджер проекта', 'Обеспечьте открытые и частые каналы общения с вашей командой, заказчиками и другими заинтересованными сторонами. Важно держать всех в курсе изменений и прогресса проекта'),
                                                                                                 (2, 2, 'Диана', 'Менеджер проекта', 'Всегда планируйте на случай непредвиденных обстоятельств и имейте план действий на случай рисков. Риск-менеджмент является критическим аспектом в управлении проектами'),
                                                                                                 (2, 2, 'Денис', 'Менеджер проекта', 'Понимайте сильные стороны и слабости вашей команды, чтобы эффективно распределять задачи. Правильное делегирование не только повышает эффективность, но и мотивирует команду'),
                                                                                                 (2, 2, 'Денис', 'Менеджер проекта', 'После завершения каждого проекта проводите анализ того, что было сделано хорошо, и что можно улучшить в будущем'),
                                                                                                 (2, 2, 'Анжелика', 'Менеджер проекта', 'Постоянно развивайтесь как профессионал, уделяя внимание как личностному, так и профессиональному росту. Также поощряйте свою команду к обучению и развитию навыков'),
                                                                                                 (2, 2, 'Анжелика', 'Менеджер проекта', 'Будьте готовы к изменениям. Проекты редко идут строго по плану. Гибкость и способность адаптироваться к изменяющимся условиям могут определить успех или неудачу проекта'),
                                                                                                 (2, 1, 'Алиса', 'Менеджер проекта', 'Слушайте своих пользователей, понимание их потребностей является ключом к созданию успешного продукта'),
                                                                                                 (2, 1, 'Алиса', 'Менеджер проекта', 'Определяйте и тестируйте гипотезы быстро, скорость в изучении и адаптации может значительно увеличить шансы на успех'),
                                                                                                 (2, 1, 'Алиса', 'Менеджер проекта', 'Балансируйте между инновациями и проверенными решениями – это поможет уменьшить риски и увеличить потенциал продукта'),
                                                                                                 (1, 1, 'Саша', 'Менеджер продукта', 'Учитесь на ошибках конкурентов, чтобы избежать схожих проблем в вашем продукте'),
                                                                                                 (1, 1, 'Саша', 'Менеджер продукта', 'Сотрудничайте с разработчиками; хорошие отношения и понимание между командами могут значительно ускорить разработку'),
                                                                                                 (1, 1, 'Саша', 'Менеджер продукта', 'Изучите продукт и компанию: проведите тщательное исследование продуктов компании, их рынков и конкурентов, чтобы показать свою заинтересованность и понимание бизнеса');
        </sql>
    </changeSet>


    <!-- ChangeSet for creating the Questions table -->
    <changeSet id="2023-10-questions-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS questions (
                                                     id SERIAL PRIMARY KEY,
                                                     userId INTEGER NOT NULL,
                                                     content TEXT NOT NULL,
                                                     professionId INTEGER,

                                                     FOREIGN KEY (userId) REFERENCES users(id),
                FOREIGN KEY (professionId) REFERENCES professions(id)
                );
        </sql>
    </changeSet>

    <!-- ChangeSet for creating the Interviews table -->
    <changeSet id="2023-12-answers-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS answers (
                                                   id SERIAL PRIMARY KEY,
                                                   questionId INTEGER NOT NULL,
                                                   improvement TEXT,
                                                   completeness INTEGER,
                                                   satisfaction INTEGER,
                                                   score DOUBLE PRECISION,
                                                   content TEXT NOT NULL,
                                                   answerDate TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NOW(),
                FOREIGN KEY (questionId) REFERENCES questions(id)
                );
        </sql>
    </changeSet>

    <!-- ChangeSet for creating the Chats table -->
    <changeSet id="2023-14-chats-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS chats (
                                                 id SERIAL PRIMARY KEY,
                                                 participantOneId INTEGER NOT NULL,
                                                 participantTwoId INTEGER NOT NULL,
                                                 FOREIGN KEY (participantOneId) REFERENCES users(id),
                FOREIGN KEY (participantTwoId) REFERENCES users(id)
                );
        </sql>
    </changeSet>

    <!-- ChangeSet for creating the Messages table -->
    <changeSet id="2023-15-messages-table-creation" author="dayana">
        <sql>
            CREATE TABLE IF NOT EXISTS messages (
                                                    id SERIAL PRIMARY KEY,
                                                    chatId INTEGER NOT NULL,
                                                    senderId INTEGER NOT NULL,
                                                    content TEXT,
                                                    isRead BOOLEAN,
                                                    dateMessage TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NOW(),
                FOREIGN KEY (chatId) REFERENCES chats(id),
                FOREIGN KEY (senderId) REFERENCES users(id)
                );
        </sql>
    </changeSet>

</databaseChangeLog>